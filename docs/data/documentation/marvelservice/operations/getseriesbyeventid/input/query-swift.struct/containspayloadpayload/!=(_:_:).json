{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/marvelservice\/operations\/getseriesbyeventid\/input\/query-swift.struct\/containspayloadpayload\/!=(_:_:)"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A value to compare.","type":"text"}]}],"name":"lhs"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Another value to compare.","type":"text"}]}],"name":"rhs"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"type":"text","text":", "},{"type":"codeVoice","code":"a != b"},{"type":"text","text":" "},{"type":"text","text":"implies that "},{"type":"codeVoice","code":"a == b"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"type":"codeVoice","code":"!="},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"for any type that conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"hierarchy":{"paths":[["doc:\/\/MarvelService\/documentation\/MarvelService","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByEventId","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByEventId\/Input","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByEventId\/Input\/Query-swift.struct","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByEventId\/Input\/Query-swift.struct\/containsPayloadPayload"]]},"identifier":{"url":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByEventId\/Input\/Query-swift.struct\/containsPayloadPayload\/!=(_:_:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"title":"!=(_:_:)","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:13MarvelService10OperationsO18getSeriesByEventIdO5InputV5QueryV015containsPayloadL0O","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"MarvelService"}],"roleHeading":"Operator","symbolKind":"op","extendedModule":"Swift","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"references":{"doc://MarvelService/documentation/MarvelService/Operations/getSeriesByEventId/Input/Query-swift.struct/containsPayloadPayload":{"abstract":[],"role":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByEventId\/Input\/Query-swift.struct\/containsPayloadPayload","navigatorTitle":[{"kind":"identifier","text":"containsPayloadPayload"}],"title":"Operations.getSeriesByEventId.Input.Query.containsPayloadPayload","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"containsPayloadPayload"}],"kind":"symbol","url":"\/documentation\/marvelservice\/operations\/getseriesbyeventid\/input\/query-swift.struct\/containspayloadpayload","type":"topic"},"doc://MarvelService/documentation/MarvelService/Operations":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Operations","kind":"identifier"}],"identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Operations"}],"url":"\/documentation\/marvelservice\/operations","title":"Operations","role":"symbol","abstract":[{"text":"API operations, with input and output types, generated from ","type":"text"},{"type":"codeVoice","code":"#\/paths"},{"type":"text","text":" in the OpenAPI document."}],"type":"topic"},"doc://MarvelService/documentation/MarvelService/Operations/getSeriesByEventId/Input/Query-swift.struct":{"identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByEventId\/Input\/Query-swift.struct","title":"Operations.getSeriesByEventId.Input.Query","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Query","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/marvelservice\/operations\/getseriesbyeventid\/input\/query-swift.struct","role":"symbol","navigatorTitle":[{"text":"Query","kind":"identifier"}],"abstract":[]},"doc://MarvelService/documentation/MarvelService/Operations/getSeriesByEventId/Input/Query-swift.struct/containsPayloadPayload/!=(_:_:)":{"url":"\/documentation\/marvelservice\/operations\/getseriesbyeventid\/input\/query-swift.struct\/containspayloadpayload\/!=(_:_:)","title":"!=(_:_:)","type":"topic","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"role":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByEventId\/Input\/Query-swift.struct\/containsPayloadPayload\/!=(_:_:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://MarvelService/documentation/MarvelService/Operations/getSeriesByEventId/Input":{"title":"Operations.getSeriesByEventId.Input","abstract":[],"url":"\/documentation\/marvelservice\/operations\/getseriesbyeventid\/input","navigatorTitle":[{"kind":"identifier","text":"Input"}],"kind":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByEventId\/Input","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Input"}]},"doc://MarvelService/documentation/MarvelService/Operations/getSeriesByEventId":{"abstract":[{"type":"text","text":"Fetches lists of series filtered by an event id."}],"role":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByEventId","navigatorTitle":[{"kind":"identifier","text":"getSeriesByEventId"}],"title":"Operations.getSeriesByEventId","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"getSeriesByEventId"}],"kind":"symbol","url":"\/documentation\/marvelservice\/operations\/getseriesbyeventid","type":"topic"},"doc://MarvelService/documentation/MarvelService":{"identifier":"doc:\/\/MarvelService\/documentation\/MarvelService","kind":"symbol","url":"\/documentation\/marvelservice","title":"MarvelService","role":"collection","abstract":[{"text":"A library that allows the developer to interact with the ","type":"text"},{"type":"strong","inlineContent":[{"text":"Marvel Comics API","type":"text"}]},{"type":"text","text":" backend service."}],"type":"topic"}}}