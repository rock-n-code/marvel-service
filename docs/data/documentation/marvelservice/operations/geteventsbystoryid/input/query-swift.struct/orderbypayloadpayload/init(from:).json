{"variants":[{"paths":["\/documentation\/marvelservice\/operations\/geteventsbystoryid\/input\/query-swift.struct\/orderbypayloadpayload\/init(from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/MarvelService\/documentation\/MarvelService","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByStoryId","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByStoryId\/Input","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByStoryId\/Input\/Query-swift.struct","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByStoryId\/Input\/Query-swift.struct\/orderByPayloadPayload"]]},"abstract":[{"type":"text","text":"Creates a new instance by decoding from the given decoder, when the"},{"type":"text","text":" "},{"type":"text","text":"type’s "},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" is "},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","metadata":{"modules":[{"name":"MarvelService","relatedModules":["Swift"]}],"externalID":"s:SYsSeRzSS8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc::SYNTHESIZED::s:13MarvelService10OperationsO18getEventsByStoryIdO5InputV5QueryV05orderf7PayloadL0O","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier","text":"Decoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"title":"init(from:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}]},"role":"symbol","roleHeading":"Initializer","extendedModule":"Swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"decoder","kind":"internalParam"},{"kind":"text","text":": any "},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}]}]},{"kind":"parameters","parameters":[{"name":"decoder","content":[{"inlineContent":[{"text":"The decoder to read data from.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This initializer throws an error if reading from the decoder fails, or"},{"type":"text","text":" "},{"text":"if the data read is corrupted or otherwise invalid.","type":"text"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByStoryId\/Input\/Query-swift.struct\/orderByPayloadPayload\/init(from:)"},"references":{"doc://MarvelService/documentation/MarvelService/Operations/getEventsByStoryId/Input":{"identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByStoryId\/Input","type":"topic","url":"\/documentation\/marvelservice\/operations\/geteventsbystoryid\/input","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Input"}],"role":"symbol","title":"Operations.getEventsByStoryId.Input","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Input"}],"abstract":[]},"doc://MarvelService/documentation/MarvelService/Operations/getEventsByStoryId/Input/Query-swift.struct":{"navigatorTitle":[{"text":"Query","kind":"identifier"}],"url":"\/documentation\/marvelservice\/operations\/geteventsbystoryid\/input\/query-swift.struct","kind":"symbol","title":"Operations.getEventsByStoryId.Input.Query","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByStoryId\/Input\/Query-swift.struct","role":"symbol","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Query"}]},"doc://MarvelService/documentation/MarvelService/Operations/getEventsByStoryId":{"role":"symbol","navigatorTitle":[{"text":"getEventsByStoryId","kind":"identifier"}],"title":"Operations.getEventsByStoryId","kind":"symbol","abstract":[{"text":"Fetches lists of events filtered by a story id.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"getEventsByStoryId","kind":"identifier"}],"url":"\/documentation\/marvelservice\/operations\/geteventsbystoryid","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByStoryId","type":"topic"},"doc://MarvelService/documentation/MarvelService/Operations/getEventsByStoryId/Input/Query-swift.struct/orderByPayloadPayload/init(from:)":{"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"text":" is ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/marvelservice\/operations\/geteventsbystoryid\/input\/query-swift.struct\/orderbypayloadpayload\/init(from:)","kind":"symbol","title":"init(from:)","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByStoryId\/Input\/Query-swift.struct\/orderByPayloadPayload\/init(from:)","role":"symbol","type":"topic","abstract":[{"text":"Creates a new instance by decoding from the given decoder, when the","type":"text"},{"type":"text","text":" "},{"text":"type’s ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://MarvelService/documentation/MarvelService":{"url":"\/documentation\/marvelservice","kind":"symbol","title":"MarvelService","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService","role":"collection","type":"topic","abstract":[{"text":"A library that allows the developer to interact with the ","type":"text"},{"type":"strong","inlineContent":[{"text":"Marvel Comics API","type":"text"}]},{"text":" backend service.","type":"text"}]},"doc://MarvelService/documentation/MarvelService/Operations/getEventsByStoryId/Input/Query-swift.struct/orderByPayloadPayload":{"url":"\/documentation\/marvelservice\/operations\/geteventsbystoryid\/input\/query-swift.struct\/orderbypayloadpayload","type":"topic","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByStoryId\/Input\/Query-swift.struct\/orderByPayloadPayload","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"orderByPayloadPayload"}],"role":"symbol","title":"Operations.getEventsByStoryId.Input.Query.orderByPayloadPayload","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"orderByPayloadPayload"}],"abstract":[]},"doc://MarvelService/documentation/MarvelService/Operations":{"navigatorTitle":[{"kind":"identifier","text":"Operations"}],"url":"\/documentation\/marvelservice\/operations","kind":"symbol","title":"Operations","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","role":"symbol","type":"topic","abstract":[{"type":"text","text":"API operations, with input and output types, generated from "},{"code":"#\/paths","type":"codeVoice"},{"text":" in the OpenAPI document.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Operations"}]}}}