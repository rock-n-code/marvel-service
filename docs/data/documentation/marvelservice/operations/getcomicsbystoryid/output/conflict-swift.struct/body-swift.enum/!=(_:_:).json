{"identifier":{"url":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByStoryId\/Output\/Conflict-swift.struct\/Body-swift.enum\/!=(_:_:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/MarvelService\/documentation\/MarvelService","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByStoryId","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByStoryId\/Output","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByStoryId\/Output\/Conflict-swift.struct","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByStoryId\/Output\/Conflict-swift.struct\/Body-swift.enum"]]},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"inlineContent":[{"text":"A value to compare.","type":"text"}],"type":"paragraph"}]},{"name":"rhs","content":[{"inlineContent":[{"type":"text","text":"Another value to compare."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"Inequality is the inverse of equality. For any values ","type":"text"},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"b","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"a != b"},{"text":" ","type":"text"},{"text":"implies that ","type":"text"},{"code":"a == b","type":"codeVoice"},{"type":"text","text":" is "},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"type":"codeVoice","code":"!="},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"for any type that conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}]}]}],"metadata":{"role":"symbol","symbolKind":"op","modules":[{"name":"MarvelService","relatedModules":["Swift"]}],"title":"!=(_:_:)","extendedModule":"Swift","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:13MarvelService10OperationsO18getComicsByStoryIdO6OutputO8ConflictV4BodyO","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"roleHeading":"Operator"},"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"variants":[{"paths":["\/documentation\/marvelservice\/operations\/getcomicsbystoryid\/output\/conflict-swift.struct\/body-swift.enum\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://MarvelService/documentation/MarvelService/Operations":{"navigatorTitle":[{"kind":"identifier","text":"Operations"}],"url":"\/documentation\/marvelservice\/operations","kind":"symbol","title":"Operations","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","role":"symbol","type":"topic","abstract":[{"type":"text","text":"API operations, with input and output types, generated from "},{"code":"#\/paths","type":"codeVoice"},{"text":" in the OpenAPI document.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Operations"}]},"doc://MarvelService/documentation/MarvelService/Operations/getComicsByStoryId/Output/Conflict-swift.struct":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conflict","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Conflict"}],"kind":"symbol","role":"symbol","title":"Operations.getComicsByStoryId.Output.Conflict","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByStoryId\/Output\/Conflict-swift.struct","url":"\/documentation\/marvelservice\/operations\/getcomicsbystoryid\/output\/conflict-swift.struct"},"doc://MarvelService/documentation/MarvelService/Operations/getComicsByStoryId/Output/Conflict-swift.struct/Body-swift.enum/!=(_:_:)":{"role":"symbol","title":"!=(_:_:)","kind":"symbol","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/marvelservice\/operations\/getcomicsbystoryid\/output\/conflict-swift.struct\/body-swift.enum\/!=(_:_:)","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByStoryId\/Output\/Conflict-swift.struct\/Body-swift.enum\/!=(_:_:)","type":"topic"},"doc://MarvelService/documentation/MarvelService/Operations/getComicsByStoryId/Output":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Output"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Output"}],"kind":"symbol","role":"symbol","title":"Operations.getComicsByStoryId.Output","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByStoryId\/Output","url":"\/documentation\/marvelservice\/operations\/getcomicsbystoryid\/output"},"doc://MarvelService/documentation/MarvelService/Operations/getComicsByStoryId":{"type":"topic","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByStoryId","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getComicsByStoryId","kind":"identifier"}],"url":"\/documentation\/marvelservice\/operations\/getcomicsbystoryid","title":"Operations.getComicsByStoryId","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"getComicsByStoryId","kind":"identifier"}],"abstract":[{"type":"text","text":"Fetches lists of comics filtered by a story id."}]},"doc://MarvelService/documentation/MarvelService":{"url":"\/documentation\/marvelservice","kind":"symbol","title":"MarvelService","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService","role":"collection","type":"topic","abstract":[{"text":"A library that allows the developer to interact with the ","type":"text"},{"type":"strong","inlineContent":[{"text":"Marvel Comics API","type":"text"}]},{"text":" backend service.","type":"text"}]},"doc://MarvelService/documentation/MarvelService/Operations/getComicsByStoryId/Output/Conflict-swift.struct/Body-swift.enum":{"type":"topic","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByStoryId\/Output\/Conflict-swift.struct\/Body-swift.enum","url":"\/documentation\/marvelservice\/operations\/getcomicsbystoryid\/output\/conflict-swift.struct\/body-swift.enum","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Body"}],"role":"symbol","title":"Operations.getComicsByStoryId.Output.Conflict.Body","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Body"}],"abstract":[]}}}