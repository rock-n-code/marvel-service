{"hierarchy":{"paths":[["doc:\/\/MarvelService\/documentation\/MarvelService","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getCharactersByStoryId","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getCharactersByStoryId\/Output","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getCharactersByStoryId\/Output\/Conflict-swift.struct","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getCharactersByStoryId\/Output\/Conflict-swift.struct\/Body-swift.enum"]]},"identifier":{"url":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getCharactersByStoryId\/Output\/Conflict-swift.struct\/Body-swift.enum\/!=(_:_:)","interfaceLanguage":"swift"},"metadata":{"extendedModule":"Swift","title":"!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:13MarvelService10OperationsO22getCharactersByStoryIdO6OutputO8ConflictV4BodyO","role":"symbol","roleHeading":"Operator","symbolKind":"op","modules":[{"name":"MarvelService","relatedModules":["Swift"]}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A value to compare.","type":"text"}]}],"name":"lhs"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Another value to compare.","type":"text"}]}],"name":"rhs"}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"type":"text","text":", "},{"type":"codeVoice","code":"a != b"},{"type":"text","text":" "},{"type":"text","text":"implies that "},{"type":"codeVoice","code":"a == b"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"type":"codeVoice","code":"!="},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"for any type that conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/marvelservice\/operations\/getcharactersbystoryid\/output\/conflict-swift.struct\/body-swift.enum\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"references":{"doc://MarvelService/documentation/MarvelService/Operations/getCharactersByStoryId/Output/Conflict-swift.struct/Body-swift.enum":{"title":"Operations.getCharactersByStoryId.Output.Conflict.Body","abstract":[],"url":"\/documentation\/marvelservice\/operations\/getcharactersbystoryid\/output\/conflict-swift.struct\/body-swift.enum","navigatorTitle":[{"kind":"identifier","text":"Body"}],"kind":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getCharactersByStoryId\/Output\/Conflict-swift.struct\/Body-swift.enum","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Body"}]},"doc://MarvelService/documentation/MarvelService/Operations/getCharactersByStoryId":{"title":"Operations.getCharactersByStoryId","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getCharactersByStoryId","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"getCharactersByStoryId","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/marvelservice\/operations\/getcharactersbystoryid","role":"symbol","navigatorTitle":[{"text":"getCharactersByStoryId","kind":"identifier"}],"abstract":[{"type":"text","text":"Fetches lists of characters filtered by a story id."}]},"doc://MarvelService/documentation/MarvelService/Operations/getCharactersByStoryId/Output/Conflict-swift.struct/Body-swift.enum/!=(_:_:)":{"identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getCharactersByStoryId\/Output\/Conflict-swift.struct\/Body-swift.enum\/!=(_:_:)","title":"!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","type":"topic","url":"\/documentation\/marvelservice\/operations\/getcharactersbystoryid\/output\/conflict-swift.struct\/body-swift.enum\/!=(_:_:)","role":"symbol","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}]},"doc://MarvelService/documentation/MarvelService/Operations/getCharactersByStoryId/Output":{"title":"Operations.getCharactersByStoryId.Output","abstract":[],"url":"\/documentation\/marvelservice\/operations\/getcharactersbystoryid\/output","navigatorTitle":[{"text":"Output","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getCharactersByStoryId\/Output","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Output","kind":"identifier"}]},"doc://MarvelService/documentation/MarvelService/Operations":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Operations","kind":"identifier"}],"identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Operations"}],"url":"\/documentation\/marvelservice\/operations","title":"Operations","role":"symbol","abstract":[{"text":"API operations, with input and output types, generated from ","type":"text"},{"type":"codeVoice","code":"#\/paths"},{"type":"text","text":" in the OpenAPI document."}],"type":"topic"},"doc://MarvelService/documentation/MarvelService/Operations/getCharactersByStoryId/Output/Conflict-swift.struct":{"title":"Operations.getCharactersByStoryId.Output.Conflict","abstract":[],"url":"\/documentation\/marvelservice\/operations\/getcharactersbystoryid\/output\/conflict-swift.struct","navigatorTitle":[{"kind":"identifier","text":"Conflict"}],"kind":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getCharactersByStoryId\/Output\/Conflict-swift.struct","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conflict"}]},"doc://MarvelService/documentation/MarvelService":{"identifier":"doc:\/\/MarvelService\/documentation\/MarvelService","kind":"symbol","url":"\/documentation\/marvelservice","title":"MarvelService","role":"collection","abstract":[{"text":"A library that allows the developer to interact with the ","type":"text"},{"type":"strong","inlineContent":[{"text":"Marvel Comics API","type":"text"}]},{"type":"text","text":" backend service."}],"type":"topic"}}}