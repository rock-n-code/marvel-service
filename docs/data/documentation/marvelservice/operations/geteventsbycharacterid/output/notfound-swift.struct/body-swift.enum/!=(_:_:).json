{"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByCharacterId\/Output\/NotFound-swift.struct\/Body-swift.enum\/!=(_:_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/MarvelService\/documentation\/MarvelService","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByCharacterId","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByCharacterId\/Output","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByCharacterId\/Output\/NotFound-swift.struct","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByCharacterId\/Output\/NotFound-swift.struct\/Body-swift.enum"]]},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"text":"A value to compare.","type":"text"}]}]},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"text":"Another value to compare.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"type":"text","text":", "},{"type":"codeVoice","code":"a != b"},{"type":"text","text":" "},{"type":"text","text":"implies that "},{"type":"codeVoice","code":"a == b"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"code":"!=","type":"codeVoice"},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"for any type that conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"modules":[{"relatedModules":["Swift"],"name":"MarvelService"}],"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:13MarvelService10OperationsO22getEventsByCharacterIdO6OutputO8NotFoundV4BodyO","symbolKind":"op","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"!=(_:_:)","role":"symbol","roleHeading":"Operator","extendedModule":"Swift"},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"variants":[{"paths":["\/documentation\/marvelservice\/operations\/geteventsbycharacterid\/output\/notfound-swift.struct\/body-swift.enum\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://MarvelService/documentation/MarvelService/Operations/getEventsByCharacterId/Output/NotFound-swift.struct":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NotFound"}],"title":"Operations.getEventsByCharacterId.Output.NotFound","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NotFound"}],"url":"\/documentation\/marvelservice\/operations\/geteventsbycharacterid\/output\/notfound-swift.struct","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByCharacterId\/Output\/NotFound-swift.struct","type":"topic"},"doc://MarvelService/documentation/MarvelService/Operations/getEventsByCharacterId/Output/NotFound-swift.struct/Body-swift.enum/!=(_:_:)":{"url":"\/documentation\/marvelservice\/operations\/geteventsbycharacterid\/output\/notfound-swift.struct\/body-swift.enum\/!=(_:_:)","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByCharacterId\/Output\/NotFound-swift.struct\/Body-swift.enum\/!=(_:_:)","type":"topic","kind":"symbol","role":"symbol","title":"!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}]},"doc://MarvelService/documentation/MarvelService/Operations/getEventsByCharacterId/Output/NotFound-swift.struct/Body-swift.enum":{"type":"topic","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByCharacterId\/Output\/NotFound-swift.struct\/Body-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Body","kind":"identifier"}],"url":"\/documentation\/marvelservice\/operations\/geteventsbycharacterid\/output\/notfound-swift.struct\/body-swift.enum","title":"Operations.getEventsByCharacterId.Output.NotFound.Body","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Body","kind":"identifier"}],"abstract":[]},"doc://MarvelService/documentation/MarvelService/Operations/getEventsByCharacterId":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"getEventsByCharacterId"}],"abstract":[{"type":"text","text":"Fetches lists of events filtered by a character id."}],"navigatorTitle":[{"kind":"identifier","text":"getEventsByCharacterId"}],"kind":"symbol","role":"symbol","title":"Operations.getEventsByCharacterId","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByCharacterId","url":"\/documentation\/marvelservice\/operations\/geteventsbycharacterid"},"doc://MarvelService/documentation/MarvelService":{"url":"\/documentation\/marvelservice","kind":"symbol","title":"MarvelService","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService","role":"collection","type":"topic","abstract":[{"text":"A library that allows the developer to interact with the ","type":"text"},{"type":"strong","inlineContent":[{"text":"Marvel Comics API","type":"text"}]},{"text":" backend service.","type":"text"}]},"doc://MarvelService/documentation/MarvelService/Operations/getEventsByCharacterId/Output":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Output"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Output"}],"kind":"symbol","role":"symbol","title":"Operations.getEventsByCharacterId.Output","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getEventsByCharacterId\/Output","url":"\/documentation\/marvelservice\/operations\/geteventsbycharacterid\/output"},"doc://MarvelService/documentation/MarvelService/Operations":{"navigatorTitle":[{"kind":"identifier","text":"Operations"}],"url":"\/documentation\/marvelservice\/operations","kind":"symbol","title":"Operations","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","role":"symbol","type":"topic","abstract":[{"type":"text","text":"API operations, with input and output types, generated from "},{"code":"#\/paths","type":"codeVoice"},{"text":" in the OpenAPI document.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Operations"}]}}}