{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"decoder","kind":"internalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"decoder","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The decoder to read data from."}]}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This initializer throws an error if reading from the decoder fails, or"},{"type":"text","text":" "},{"type":"text","text":"if the data read is corrupted or otherwise invalid."}],"type":"paragraph"}]}],"identifier":{"url":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId\/Input\/Query-swift.struct\/dateDescriptorPayloadPayload\/init(from:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a new instance by decoding from the given decoder, when the"},{"type":"text","text":" "},{"type":"text","text":"type’s "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/marvelservice\/operations\/getcomicsbyseriesid\/input\/query-swift.struct\/datedescriptorpayloadpayload\/init(from:)"]}],"sections":[],"kind":"symbol","metadata":{"roleHeading":"Initializer","externalID":"s:SYsSeRzSS8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc::SYNTHESIZED::s:13MarvelService10OperationsO19getComicsBySeriesIdO5InputV5QueryV021dateDescriptorPayloadM0O","role":"symbol","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"extendedModule":"Swift","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}]},"title":"init(from:)","modules":[{"name":"MarvelService","relatedModules":["Swift"]}]},"hierarchy":{"paths":[["doc:\/\/MarvelService\/documentation\/MarvelService","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId\/Input","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId\/Input\/Query-swift.struct","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId\/Input\/Query-swift.struct\/dateDescriptorPayloadPayload"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://MarvelService/documentation/MarvelService/Operations/getComicsBySeriesId/Input/Query-swift.struct/dateDescriptorPayloadPayload":{"url":"\/documentation\/marvelservice\/operations\/getcomicsbyseriesid\/input\/query-swift.struct\/datedescriptorpayloadpayload","role":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId\/Input\/Query-swift.struct\/dateDescriptorPayloadPayload","abstract":[],"navigatorTitle":[{"text":"dateDescriptorPayloadPayload","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dateDescriptorPayloadPayload","kind":"identifier"}],"kind":"symbol","type":"topic","title":"Operations.getComicsBySeriesId.Input.Query.dateDescriptorPayloadPayload"},"doc://MarvelService/documentation/MarvelService/Operations/getComicsBySeriesId/Input/Query-swift.struct":{"url":"\/documentation\/marvelservice\/operations\/getcomicsbyseriesid\/input\/query-swift.struct","role":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId\/Input\/Query-swift.struct","abstract":[],"navigatorTitle":[{"text":"Query","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Query","kind":"identifier"}],"kind":"symbol","type":"topic","title":"Operations.getComicsBySeriesId.Input.Query"},"doc://MarvelService/documentation/MarvelService":{"kind":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService","role":"collection","abstract":[{"type":"text","text":"A library that allows the developer to interact with the "},{"type":"strong","inlineContent":[{"type":"text","text":"Marvel Comics API"}]},{"type":"text","text":" backend service."}],"url":"\/documentation\/marvelservice","type":"topic","title":"MarvelService"},"doc://MarvelService/documentation/MarvelService/Operations/getComicsBySeriesId/Input":{"url":"\/documentation\/marvelservice\/operations\/getcomicsbyseriesid\/input","role":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId\/Input","abstract":[],"navigatorTitle":[{"text":"Input","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"identifier"}],"kind":"symbol","type":"topic","title":"Operations.getComicsBySeriesId.Input"},"doc://MarvelService/documentation/MarvelService/Operations/getComicsBySeriesId":{"identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId","kind":"symbol","abstract":[{"type":"text","text":"Fetches lists of comics filtered by a series id."}],"type":"topic","title":"Operations.getComicsBySeriesId","navigatorTitle":[{"kind":"identifier","text":"getComicsBySeriesId"}],"url":"\/documentation\/marvelservice\/operations\/getcomicsbyseriesid","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"getComicsBySeriesId"}],"role":"symbol"},"doc://MarvelService/documentation/MarvelService/Operations":{"role":"symbol","abstract":[{"type":"text","text":"API operations, with input and output types, generated from "},{"type":"codeVoice","code":"#\/paths"},{"type":"text","text":" in the OpenAPI document."}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Operations"}],"navigatorTitle":[{"text":"Operations","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","title":"Operations","url":"\/documentation\/marvelservice\/operations"},"doc://MarvelService/documentation/MarvelService/Operations/getComicsBySeriesId/Input/Query-swift.struct/dateDescriptorPayloadPayload/init(from:)":{"url":"\/documentation\/marvelservice\/operations\/getcomicsbyseriesid\/input\/query-swift.struct\/datedescriptorpayloadpayload\/init(from:)","role":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId\/Input\/Query-swift.struct\/dateDescriptorPayloadPayload\/init(from:)","abstract":[{"type":"text","text":"Creates a new instance by decoding from the given decoder, when the"},{"type":"text","text":" "},{"type":"text","text":"type’s "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"kind":"symbol","type":"topic","title":"init(from:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}}}}