{"identifier":{"url":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId\/Input\/Query-swift.struct\/formatTypePayload\/!=(_:_:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/MarvelService\/documentation\/MarvelService","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId\/Input","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId\/Input\/Query-swift.struct","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId\/Input\/Query-swift.struct\/formatTypePayload"]]},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"platforms":["macOS"]}]},{"parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A value to compare."}]}]},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Another value to compare."}]}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"code":"a","type":"codeVoice"},{"type":"text","text":" and "},{"code":"b","type":"codeVoice"},{"type":"text","text":", "},{"code":"a != b","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"implies that "},{"code":"a == b","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"type":"codeVoice","code":"!="},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"for any type that conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"}],"metadata":{"modules":[{"name":"MarvelService","relatedModules":["Swift"]}],"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:13MarvelService10OperationsO19getComicsBySeriesIdO5InputV5QueryV17formatTypePayloadO","symbolKind":"op","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"!=(_:_:)","role":"symbol","roleHeading":"Operator","extendedModule":"Swift"},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"variants":[{"paths":["\/documentation\/marvelservice\/operations\/getcomicsbyseriesid\/input\/query-swift.struct\/formattypepayload\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://MarvelService/documentation/MarvelService/Operations":{"navigatorTitle":[{"kind":"identifier","text":"Operations"}],"url":"\/documentation\/marvelservice\/operations","kind":"symbol","title":"Operations","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","role":"symbol","type":"topic","abstract":[{"type":"text","text":"API operations, with input and output types, generated from "},{"code":"#\/paths","type":"codeVoice"},{"text":" in the OpenAPI document.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Operations"}]},"doc://MarvelService/documentation/MarvelService":{"url":"\/documentation\/marvelservice","kind":"symbol","title":"MarvelService","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService","role":"collection","type":"topic","abstract":[{"text":"A library that allows the developer to interact with the ","type":"text"},{"type":"strong","inlineContent":[{"text":"Marvel Comics API","type":"text"}]},{"text":" backend service.","type":"text"}]},"doc://MarvelService/documentation/MarvelService/Operations/getComicsBySeriesId":{"type":"topic","url":"\/documentation\/marvelservice\/operations\/getcomicsbyseriesid","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"getComicsBySeriesId"}],"role":"symbol","title":"Operations.getComicsBySeriesId","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"getComicsBySeriesId"}],"abstract":[{"type":"text","text":"Fetches lists of comics filtered by a series id."}]},"doc://MarvelService/documentation/MarvelService/Operations/getComicsBySeriesId/Input/Query-swift.struct/formatTypePayload/!=(_:_:)":{"type":"topic","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId\/Input\/Query-swift.struct\/formatTypePayload\/!=(_:_:)","url":"\/documentation\/marvelservice\/operations\/getcomicsbyseriesid\/input\/query-swift.struct\/formattypepayload\/!=(_:_:)","kind":"symbol","role":"symbol","title":"!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}]},"doc://MarvelService/documentation/MarvelService/Operations/getComicsBySeriesId/Input/Query-swift.struct/formatTypePayload":{"navigatorTitle":[{"text":"formatTypePayload","kind":"identifier"}],"url":"\/documentation\/marvelservice\/operations\/getcomicsbyseriesid\/input\/query-swift.struct\/formattypepayload","kind":"symbol","title":"Operations.getComicsBySeriesId.Input.Query.formatTypePayload","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId\/Input\/Query-swift.struct\/formatTypePayload","role":"symbol","type":"topic","abstract":[],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"formatTypePayload","kind":"identifier"}]},"doc://MarvelService/documentation/MarvelService/Operations/getComicsBySeriesId/Input":{"navigatorTitle":[{"text":"Input","kind":"identifier"}],"url":"\/documentation\/marvelservice\/operations\/getcomicsbyseriesid\/input","kind":"symbol","title":"Operations.getComicsBySeriesId.Input","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId\/Input","role":"symbol","type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"identifier"}]},"doc://MarvelService/documentation/MarvelService/Operations/getComicsBySeriesId/Input/Query-swift.struct":{"navigatorTitle":[{"text":"Query","kind":"identifier"}],"url":"\/documentation\/marvelservice\/operations\/getcomicsbyseriesid\/input\/query-swift.struct","kind":"symbol","title":"Operations.getComicsBySeriesId.Input.Query","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsBySeriesId\/Input\/Query-swift.struct","role":"symbol","type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Query","kind":"identifier"}]}}}