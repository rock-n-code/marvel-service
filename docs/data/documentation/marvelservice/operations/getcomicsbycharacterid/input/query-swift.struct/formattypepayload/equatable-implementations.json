{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/marvelservice\/operations\/getcomicsbycharacterid\/input\/query-swift.struct\/formattypepayload\/equatable-implementations"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"title":"Operators","identifiers":["doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByCharacterId\/Input\/Query-swift.struct\/formatTypePayload\/!=(_:_:)"],"generated":true,"anchor":"Operators"}],"hierarchy":{"paths":[["doc:\/\/MarvelService\/documentation\/MarvelService","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByCharacterId","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByCharacterId\/Input","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByCharacterId\/Input\/Query-swift.struct","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByCharacterId\/Input\/Query-swift.struct\/formatTypePayload"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByCharacterId\/Input\/Query-swift.struct\/formatTypePayload\/Equatable-Implementations"},"kind":"article","metadata":{"modules":[{"name":"MarvelService"}],"title":"Equatable Implementations","roleHeading":"API Collection","role":"collectionGroup"},"references":{"doc://MarvelService/documentation/MarvelService/Operations/getComicsByCharacterId/Input/Query-swift.struct/formatTypePayload/!=(_:_:)":{"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"role":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByCharacterId\/Input\/Query-swift.struct\/formatTypePayload\/!=(_:_:)","title":"!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/marvelservice\/operations\/getcomicsbycharacterid\/input\/query-swift.struct\/formattypepayload\/!=(_:_:)"},"doc://MarvelService/documentation/MarvelService/Operations/getComicsByCharacterId/Input":{"url":"\/documentation\/marvelservice\/operations\/getcomicsbycharacterid\/input","title":"Operations.getComicsByCharacterId.Input","navigatorTitle":[{"kind":"identifier","text":"Input"}],"type":"topic","abstract":[],"role":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByCharacterId\/Input","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Input"}]},"doc://MarvelService/documentation/MarvelService/Operations/getComicsByCharacterId":{"navigatorTitle":[{"text":"getComicsByCharacterId","kind":"identifier"}],"url":"\/documentation\/marvelservice\/operations\/getcomicsbycharacterid","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByCharacterId","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"getComicsByCharacterId","kind":"identifier"}],"role":"symbol","type":"topic","title":"Operations.getComicsByCharacterId","abstract":[{"text":"Fetches lists of comics filtered by a character id.","type":"text"}],"kind":"symbol"},"doc://MarvelService/documentation/MarvelService/Operations/getComicsByCharacterId/Input/Query-swift.struct/formatTypePayload":{"url":"\/documentation\/marvelservice\/operations\/getcomicsbycharacterid\/input\/query-swift.struct\/formattypepayload","title":"Operations.getComicsByCharacterId.Input.Query.formatTypePayload","navigatorTitle":[{"text":"formatTypePayload","kind":"identifier"}],"type":"topic","abstract":[],"role":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByCharacterId\/Input\/Query-swift.struct\/formatTypePayload","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"formatTypePayload","kind":"identifier"}]},"doc://MarvelService/documentation/MarvelService/Operations":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Operations","kind":"identifier"}],"identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Operations"}],"url":"\/documentation\/marvelservice\/operations","title":"Operations","role":"symbol","abstract":[{"text":"API operations, with input and output types, generated from ","type":"text"},{"type":"codeVoice","code":"#\/paths"},{"type":"text","text":" in the OpenAPI document."}],"type":"topic"},"doc://MarvelService/documentation/MarvelService":{"identifier":"doc:\/\/MarvelService\/documentation\/MarvelService","kind":"symbol","url":"\/documentation\/marvelservice","title":"MarvelService","role":"collection","abstract":[{"text":"A library that allows the developer to interact with the ","type":"text"},{"type":"strong","inlineContent":[{"text":"Marvel Comics API","type":"text"}]},{"type":"text","text":" backend service."}],"type":"topic"},"doc://MarvelService/documentation/MarvelService/Operations/getComicsByCharacterId/Input/Query-swift.struct":{"identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComicsByCharacterId\/Input\/Query-swift.struct","title":"Operations.getComicsByCharacterId.Input.Query","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Query","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/marvelservice\/operations\/getcomicsbycharacterid\/input\/query-swift.struct","role":"symbol","navigatorTitle":[{"text":"Query","kind":"identifier"}],"abstract":[]}}}