{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/marvelservice\/operations\/getcomics\/input\/query-swift.struct\/datedescriptorpayload\/init(from:)"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"decoder","kind":"internalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The decoder to read data from.","type":"text"}]}],"name":"decoder"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This initializer throws an error if reading from the decoder fails, or"},{"type":"text","text":" "},{"type":"text","text":"if the data read is corrupted or otherwise invalid."}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Creates a new instance by decoding from the given decoder, when the"},{"text":" ","type":"text"},{"type":"text","text":"type’s "},{"type":"codeVoice","code":"RawValue"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/MarvelService\/documentation\/MarvelService","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComics","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComics\/Input","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComics\/Input\/Query-swift.struct","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComics\/Input\/Query-swift.struct\/dateDescriptorPayload"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComics\/Input\/Query-swift.struct\/dateDescriptorPayload\/init(from:)"},"kind":"symbol","metadata":{"extendedModule":"Swift","title":"init(from:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier","text":"Decoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"externalID":"s:SYsSeRzSS8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc::SYNTHESIZED::s:13MarvelService10OperationsO9getComicsO5InputV5QueryV21dateDescriptorPayloadO","roleHeading":"Initializer","role":"symbol","symbolKind":"init","modules":[{"relatedModules":["Swift"],"name":"MarvelService"}]},"references":{"doc://MarvelService/documentation/MarvelService/Operations/getComics/Input/Query-swift.struct/dateDescriptorPayload/init(from:)":{"identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComics\/Input\/Query-swift.struct\/dateDescriptorPayload\/init(from:)","title":"init(from:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","type":"topic","url":"\/documentation\/marvelservice\/operations\/getcomics\/input\/query-swift.struct\/datedescriptorpayload\/init(from:)","role":"symbol","abstract":[{"text":"Creates a new instance by decoding from the given decoder, when the","type":"text"},{"text":" ","type":"text"},{"text":"type’s ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}]},"doc://MarvelService/documentation/MarvelService/Operations/getComics/Input/Query-swift.struct/dateDescriptorPayload":{"abstract":[],"role":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComics\/Input\/Query-swift.struct\/dateDescriptorPayload","navigatorTitle":[{"kind":"identifier","text":"dateDescriptorPayload"}],"title":"Operations.getComics.Input.Query.dateDescriptorPayload","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dateDescriptorPayload"}],"kind":"symbol","type":"topic","url":"\/documentation\/marvelservice\/operations\/getcomics\/input\/query-swift.struct\/datedescriptorpayload"},"doc://MarvelService/documentation/MarvelService/Operations/getComics/Input/Query-swift.struct":{"abstract":[],"role":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComics\/Input\/Query-swift.struct","navigatorTitle":[{"text":"Query","kind":"identifier"}],"title":"Operations.getComics.Input.Query","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Query","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/marvelservice\/operations\/getcomics\/input\/query-swift.struct"},"doc://MarvelService/documentation/MarvelService/Operations/getComics":{"navigatorTitle":[{"text":"getComics","kind":"identifier"}],"url":"\/documentation\/marvelservice\/operations\/getcomics","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComics","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"getComics","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"text":"Fetches lists of comics.","type":"text"}],"kind":"symbol","title":"Operations.getComics"},"doc://MarvelService/documentation/MarvelService/Operations/getComics/Input":{"abstract":[],"role":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getComics\/Input","navigatorTitle":[{"text":"Input","kind":"identifier"}],"title":"Operations.getComics.Input","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/marvelservice\/operations\/getcomics\/input","type":"topic"},"doc://MarvelService/documentation/MarvelService":{"identifier":"doc:\/\/MarvelService\/documentation\/MarvelService","kind":"symbol","url":"\/documentation\/marvelservice","title":"MarvelService","role":"collection","abstract":[{"text":"A library that allows the developer to interact with the ","type":"text"},{"type":"strong","inlineContent":[{"text":"Marvel Comics API","type":"text"}]},{"type":"text","text":" backend service."}],"type":"topic"},"doc://MarvelService/documentation/MarvelService/Operations":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Operations","kind":"identifier"}],"identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Operations"}],"url":"\/documentation\/marvelservice\/operations","title":"Operations","role":"symbol","abstract":[{"text":"API operations, with input and output types, generated from ","type":"text"},{"type":"codeVoice","code":"#\/paths"},{"type":"text","text":" in the OpenAPI document."}],"type":"topic"}}}