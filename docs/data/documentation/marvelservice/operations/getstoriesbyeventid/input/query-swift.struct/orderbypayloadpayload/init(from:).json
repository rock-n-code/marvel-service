{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/marvelservice\/operations\/getstoriesbyeventid\/input\/query-swift.struct\/orderbypayloadpayload\/init(from:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"decoder"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"decoder","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The decoder to read data from."}]}]}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This initializer throws an error if reading from the decoder fails, or"},{"type":"text","text":" "},{"type":"text","text":"if the data read is corrupted or otherwise invalid."}]}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Creates a new instance by decoding from the given decoder, when the","type":"text"},{"text":" ","type":"text"},{"text":"type’s ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/MarvelService\/documentation\/MarvelService","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getStoriesByEventId","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getStoriesByEventId\/Input","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getStoriesByEventId\/Input\/Query-swift.struct","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getStoriesByEventId\/Input\/Query-swift.struct\/orderByPayloadPayload"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getStoriesByEventId\/Input\/Query-swift.struct\/orderByPayloadPayload\/init(from:)"},"kind":"symbol","metadata":{"title":"init(from:)","externalID":"s:SYsSeRzSS8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc::SYNTHESIZED::s:13MarvelService10OperationsO19getStoriesByEventIdO5InputV5QueryV05orderf7PayloadL0O","role":"symbol","roleHeading":"Initializer","modules":[{"relatedModules":["Swift"],"name":"MarvelService"}],"symbolKind":"init","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"extendedModule":"Swift","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]},"references":{"doc://MarvelService/documentation/MarvelService/Operations":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Operations","kind":"identifier"}],"identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Operations"}],"url":"\/documentation\/marvelservice\/operations","title":"Operations","role":"symbol","abstract":[{"text":"API operations, with input and output types, generated from ","type":"text"},{"type":"codeVoice","code":"#\/paths"},{"type":"text","text":" in the OpenAPI document."}],"type":"topic"},"doc://MarvelService/documentation/MarvelService/Operations/getStoriesByEventId/Input/Query-swift.struct/orderByPayloadPayload":{"title":"Operations.getStoriesByEventId.Input.Query.orderByPayloadPayload","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getStoriesByEventId\/Input\/Query-swift.struct\/orderByPayloadPayload","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"orderByPayloadPayload","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/marvelservice\/operations\/getstoriesbyeventid\/input\/query-swift.struct\/orderbypayloadpayload","role":"symbol","navigatorTitle":[{"text":"orderByPayloadPayload","kind":"identifier"}],"abstract":[]},"doc://MarvelService/documentation/MarvelService/Operations/getStoriesByEventId/Input":{"url":"\/documentation\/marvelservice\/operations\/getstoriesbyeventid\/input","title":"Operations.getStoriesByEventId.Input","navigatorTitle":[{"text":"Input","kind":"identifier"}],"type":"topic","abstract":[],"role":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getStoriesByEventId\/Input","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"identifier"}]},"doc://MarvelService/documentation/MarvelService/Operations/getStoriesByEventId/Input/Query-swift.struct/orderByPayloadPayload/init(from:)":{"url":"\/documentation\/marvelservice\/operations\/getstoriesbyeventid\/input\/query-swift.struct\/orderbypayloadpayload\/init(from:)","title":"init(from:)","type":"topic","abstract":[{"type":"text","text":"Creates a new instance by decoding from the given decoder, when the"},{"type":"text","text":" "},{"type":"text","text":"type’s "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getStoriesByEventId\/Input\/Query-swift.struct\/orderByPayloadPayload\/init(from:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]},"doc://MarvelService/documentation/MarvelService/Operations/getStoriesByEventId":{"url":"\/documentation\/marvelservice\/operations\/getstoriesbyeventid","title":"Operations.getStoriesByEventId","navigatorTitle":[{"text":"getStoriesByEventId","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Fetches lists of stories filtered by an event id."}],"role":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getStoriesByEventId","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getStoriesByEventId","kind":"identifier"}]},"doc://MarvelService/documentation/MarvelService/Operations/getStoriesByEventId/Input/Query-swift.struct":{"url":"\/documentation\/marvelservice\/operations\/getstoriesbyeventid\/input\/query-swift.struct","title":"Operations.getStoriesByEventId.Input.Query","navigatorTitle":[{"text":"Query","kind":"identifier"}],"type":"topic","abstract":[],"role":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getStoriesByEventId\/Input\/Query-swift.struct","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Query","kind":"identifier"}]},"doc://MarvelService/documentation/MarvelService":{"identifier":"doc:\/\/MarvelService\/documentation\/MarvelService","kind":"symbol","url":"\/documentation\/marvelservice","title":"MarvelService","role":"collection","abstract":[{"text":"A library that allows the developer to interact with the ","type":"text"},{"type":"strong","inlineContent":[{"text":"Marvel Comics API","type":"text"}]},{"type":"text","text":" backend service."}],"type":"topic"}}}