{"metadata":{"roleHeading":"Operator","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"MarvelService"}],"title":"!=(_:_:)","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:13MarvelService10OperationsO18getSeriesByStoryIdO5InputV5QueryV05orderf7PayloadL0O","symbolKind":"op","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByStoryId\/Input\/Query-swift.struct\/orderByPayloadPayload\/!=(_:_:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}],"kind":"declarations"},{"parameters":[{"name":"lhs","content":[{"inlineContent":[{"type":"text","text":"A value to compare."}],"type":"paragraph"}]},{"name":"rhs","content":[{"inlineContent":[{"type":"text","text":"Another value to compare."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Inequality is the inverse of equality. For any values ","type":"text"},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"b","type":"codeVoice"},{"text":", ","type":"text"},{"code":"a != b","type":"codeVoice"},{"text":" ","type":"text"},{"text":"implies that ","type":"text"},{"code":"a == b","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"code":"!=","type":"codeVoice"},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"for any type that conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/marvelservice\/operations\/getseriesbystoryid\/input\/query-swift.struct\/orderbypayloadpayload\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/MarvelService\/documentation\/MarvelService","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByStoryId","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByStoryId\/Input","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByStoryId\/Input\/Query-swift.struct","doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByStoryId\/Input\/Query-swift.struct\/orderByPayloadPayload"]]},"references":{"doc://MarvelService/documentation/MarvelService/Operations/getSeriesByStoryId":{"url":"\/documentation\/marvelservice\/operations\/getseriesbystoryid","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"getSeriesByStoryId"}],"type":"topic","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByStoryId","title":"Operations.getSeriesByStoryId","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"getSeriesByStoryId"}],"abstract":[{"type":"text","text":"Fetches lists of series filtered by a story id."}],"kind":"symbol"},"doc://MarvelService/documentation/MarvelService/Operations/getSeriesByStoryId/Input":{"url":"\/documentation\/marvelservice\/operations\/getseriesbystoryid\/input","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Input"}],"type":"topic","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByStoryId\/Input","title":"Operations.getSeriesByStoryId.Input","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Input"}],"abstract":[],"kind":"symbol"},"doc://MarvelService/documentation/MarvelService/Operations/getSeriesByStoryId/Input/Query-swift.struct":{"url":"\/documentation\/marvelservice\/operations\/getseriesbystoryid\/input\/query-swift.struct","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Query"}],"type":"topic","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByStoryId\/Input\/Query-swift.struct","title":"Operations.getSeriesByStoryId.Input.Query","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Query"}],"abstract":[],"kind":"symbol"},"doc://MarvelService/documentation/MarvelService":{"kind":"symbol","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService","role":"collection","abstract":[{"type":"text","text":"A library that allows the developer to interact with the "},{"type":"strong","inlineContent":[{"type":"text","text":"Marvel Comics API"}]},{"type":"text","text":" backend service."}],"url":"\/documentation\/marvelservice","type":"topic","title":"MarvelService"},"doc://MarvelService/documentation/MarvelService/Operations":{"role":"symbol","abstract":[{"type":"text","text":"API operations, with input and output types, generated from "},{"type":"codeVoice","code":"#\/paths"},{"type":"text","text":" in the OpenAPI document."}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Operations"}],"navigatorTitle":[{"text":"Operations","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations","title":"Operations","url":"\/documentation\/marvelservice\/operations"},"doc://MarvelService/documentation/MarvelService/Operations/getSeriesByStoryId/Input/Query-swift.struct/orderByPayloadPayload/!=(_:_:)":{"identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByStoryId\/Input\/Query-swift.struct\/orderByPayloadPayload\/!=(_:_:)","url":"\/documentation\/marvelservice\/operations\/getseriesbystoryid\/input\/query-swift.struct\/orderbypayloadpayload\/!=(_:_:)","type":"topic","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"title":"!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol"},"doc://MarvelService/documentation/MarvelService/Operations/getSeriesByStoryId/Input/Query-swift.struct/orderByPayloadPayload":{"url":"\/documentation\/marvelservice\/operations\/getseriesbystoryid\/input\/query-swift.struct\/orderbypayloadpayload","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"orderByPayloadPayload"}],"type":"topic","identifier":"doc:\/\/MarvelService\/documentation\/MarvelService\/Operations\/getSeriesByStoryId\/Input\/Query-swift.struct\/orderByPayloadPayload","title":"Operations.getSeriesByStoryId.Input.Query.orderByPayloadPayload","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"orderByPayloadPayload"}],"abstract":[],"kind":"symbol"}}}